name: RCANx3
suffix: ~  # add suffix to saved images
model_type: SRModel
scale: 3
crop_border: ~  # crop border when evaluation. If None, crop the scale pixels
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

datasets:
  test_0: # the 1st test dataset
    name: manga109
    type: PairedImageDataset
    dataroot_gt: datasets/manga109/GTmod12
    dataroot_lq: datasets/manga109/LRbicx3
    io_backend:
      type: disk
#    test_1:  # the 1st test dataset
#      name: Set5
#      type: PairedImageDataset
#      dataroot_gt: datasets/Set5/GTmod12
#      dataroot_lq: datasets/Set5/LRbicx3
#      io_backend:
#        type: disk
#    test_2: # the 2nd test dataset
#      name: Set14
#      type: PairedImageDataset
#      dataroot_gt: datasets/Set14/GTmod12
#      dataroot_lq: datasets/Set14/LRbicx3
#      io_backend:
#        type: disk
##    test_3:
##      name: DIV2Kval
##      type: PairedImageDataset
##      dataroot_gt: datasets/DIV2Kval/DIV2K_valid_GTmod12
##      dataroot_lq: datasets/DIV2Kval/DIV2K_valid_LRbicx3
##      #filename_tmpl: '{}x3'
##      io_backend:
##        type: disk
#    test_4:
#      name: BSDS100
#      type: PairedImageDataset
#      dataroot_gt: datasets/BSDS100/GTmod12
#      dataroot_lq: datasets/BSDS100/LRbicx3
#      #filename_tmpl: '{}x3'
#      io_backend:
#        type: disk
#    test_5:
#      name: Urban100
#      type: PairedImageDataset
#      dataroot_gt: datasets/Urban100/GTmod12
#      dataroot_lq: datasets/Urban100/LRbicx3
#      #filename_tmpl: '{}x3'
#      io_backend:
#        type: disk

# network structures
network_g:
  type: RCAN
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_group: 10
  num_block: 6
  squeeze_factor: 16
  upscale: 3
  res_scale: 1
  img_range: 255.
  rgb_mean: [0.4488, 0.4371, 0.4040]


# path
path:
  pretrain_network_g: ./experiments/ECCV2024model/MTKD2024/RCANlwx3_MTKD_net_g_26000.pth
  strict_load_g: true


# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 3
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 3
      test_y_channel: true
